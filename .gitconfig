[alias]
    ag = reset HEAD^  # again
    b = branch
    br = branch
    changed = update-index --no-assume-unchanged  # revert op of `git unchanged`
    ci = commit
    cia = commit --all
    cim = commit --amend
    cima = commit --amend --all
    clone = clone -o o
    co = checkout
    crp = cherry-pick
    d = diff
    dfl = diff --name-status  # diff and list name
    dfs = diff --staged
    dl = diff HEAD^
    f = fetch --tags
    g = grep -in  # ignore case, line number
    hide = update-index --assume-unchanged  # same with `git unchanged`
    last = log -1 HEAD
    load = stash pop
    logg = log --graph --decorate --oneline --abbrev-commit --all  # VERY VERY useful command
    logo = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative --no-merges
    logs = log --all --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
    mgf = merge --ff-only
    p = push
    pf = push -f
    puo = push -u o
    puod = push -u o -o merge_request.create -o merge_request.target=dev
    puom = push -u o -o merge_request.create -o merge_request.target=master
    puz = push -u z
    puzo = push -u z -o merge_request.create -o merge_request.target=dev
    puzm = push -u z -o merge_request.create -o merge_request.target=master
    pull = pull --rebase
    rb = rebase
    rbc = rebase --continue
    rbi = rebase -i  # if there's only one git command you should learn, it'll be `git rebase`
    rd = rebase o/master
    regret = reset HEAD^  # regret last commit, same with `git ag`
    rh = reset --hard
    rhd = reset --hard z/dev
    rp = remote prune
    rroo = remote rename origin o
    save = stash
    slog = log --graph --decorate --oneline --all --simplify-by-decoration
    squash = rebase HEAD~2 -i
    st = status
    unchanged = update-index --assume-unchanged  # assume a file is unchanged, often use to change some local config
    unhide = update-index --no-assume-unchanged  # same with `git changed`
    wip = commit --all --message 'ST-123(feat): WIP' --allow-empty --no-verify  # commit with Work In Progress quickly
    yes = log --oneline --since yesterday --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative --no-merges  # see what's new since yesterday
[core]
    autocrlf = false
    editor = vim
    eol = lf
    ignorecase = false
    excludesfile = ~/.gitignore
    pager = less --raw-control-chars
[color]
    ui = true
[merge]
    tool = vimdiff
[push]
    default = simple
[user]
    name = Lirian Su
    email = liriansu@gmail.com
